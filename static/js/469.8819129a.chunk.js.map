{"version":3,"file":"static/js/469.8819129a.chunk.js","mappings":"4LAAA,IAAMA,EAAO,+BACPC,EAAO,qN,sJCAb,EAA0B,sBAA1B,EAAwD,oBAAxD,EAAmF,mBAAnF,EAAoH,0BAApH,EAAuJ,qBAAvJ,EAAwL,wBAAxL,EAAsN,kB,SC6FtN,EAvFa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBF,EAAAA,EAAAA,UAAS,MAA/B,eAAOG,EAAP,KAAYC,EAAZ,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEA,GAA8BN,EAAAA,EAAAA,UADV,GACpB,eAAOO,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEXC,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKjB,EAAAA,EAAL,kBAAsBE,EAAtB,YACHgB,OAAQ,CACNC,QAASlB,EAAAA,EACTmB,SAAU,QACVC,SAAS,GAEXC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYvB,EAAAA,KAZZ,SAgBEwB,EAAAA,EAAAA,QAAcV,GAhBhB,OAgBXW,EAhBW,OAiBjBpB,EAAQoB,EAAKC,KAAKtB,MAjBD,gDAmBjBuB,QAAQC,MAAR,MACArB,EAAO,0BApBU,yDAAH,qDAwBlBM,GACD,GAAE,CAACZ,IAaJ,OAAIK,GACK,yBAAMA,KAIb,iBAAKuB,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,qCACA,gBAAKD,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,GAAE,kBAAa9B,EAAb,SACF+B,QArBiB,WACvBvB,GAAY,SAAAwB,GAAY,OAAKA,CAAL,IACxBtB,EAjCkB,EAkCnB,EAmBOkB,UAAS,UAAKrB,EAAWsB,EAAa,GAA7B,YAAmCA,GAH9C,oBASDtB,IACC,gCACGJ,GAAQA,EAAK8B,OAAS,GACrB,wBACG9B,EAAK+B,MAAM,EAAGzB,GAAS0B,KAAI,SAAAC,GAAK,OAC/B,eAAmBR,UAAWC,EAA9B,SACGO,EAAMC,MADAD,EAAME,GADgB,OAOnC,6CAGF,mBAAQP,QArCS,WACvBrB,GAAW,SAAA6B,GAAW,OArCJ,IAsChBA,EAA8BpC,EAAK8B,OAtCnB,CAqCI,GAGvB,EAiC0CL,UAAWC,EAA9C,SAzEY,IA0ETpB,EAA0B,YAAc,eAMpD,C","sources":["api/config.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/Cast/Cast.module.css?fa93","pages/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["const API_URL = `https://api.themoviedb.org/3`;\nconst API_KEY = `eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMDgwNzYwYjIzMTI4OWI5NmU0ODE1YzYwNDQ1MzM5ZCIsInN1YiI6IjY0YWMwYzYzZTI0YjkzMDBlMzI3YThhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LgN-PRKOtSLevLnOVfPIZ949JuxtZF7KWHhbTGJNx_E`;\n\nexport { API_URL, API_KEY };","// extracted by mini-css-extract-plugin\nexport default {\"boxCast\":\"Cast_boxCast__EEEbJ\",\"title\":\"Cast_title__VcwL3\",\"cast\":\"Cast_cast__2k5cC\",\"detailsInfo\":\"Cast_detailsInfo__AuYpc\",\"active\":\"Cast_active__Z3ZEy\",\"nameActor\":\"Cast_nameActor__JGCvH\",\"btn\":\"Cast_btn__oLNbu\"};","import { useEffect, useState } from 'react';\nimport { useParams, NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_URL, API_KEY } from 'api/config';\n\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [err, setErr] = useState(null);\n  const [showCast, setShowCast] = useState(false);\n  const initDisplay = 5;\n  const [display, setDisplay] = useState(initDisplay);\n\n  useEffect(() => {\n    const fetchCredits = async () => {\n      try {\n        const options = {\n          method: 'GET',\n          url: `${API_URL}/movie/${movieId}/credits`,\n          params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            credits: true,\n          },\n          headers: {\n            accept: 'application/json',\n            Authorization: `Bearer ${API_KEY}`,\n          },\n        };\n\n        const resp = await axios.request(options);\n        setCast(resp.data.cast);\n      } catch (err) {\n        console.error(err);\n        setErr('Error fetching Credits');\n      }\n    };\n\n    fetchCredits();\n  }, [movieId]);\n\n  const handleToggleCast = () => {\n    setShowCast(prevShowCast => !prevShowCast);\n    setDisplay(initDisplay);\n  };\n\n  const handleDisplayAll = () => {\n    setDisplay(prevDisplay =>\n      prevDisplay === initDisplay ? cast.length : initDisplay\n    );\n  };\n\n  if (err) {\n    return <div>{err}</div>;\n  }\n\n  return (\n    <div className={css.boxCast}>\n      <h4 className={css.title}>Additional information</h4>\n      <div className={css.cast}>\n        <NavLink\n          to={`/movies/${movieId}/cast`}\n          onClick={handleToggleCast}\n          className={`${showCast ? css.active : ''} ${css.detailsInfo}`}\n        >\n          Cast\n        </NavLink>\n      </div>\n\n      {showCast && (\n        <>\n          {cast && cast.length > 0 ? (\n            <ul>\n              {cast.slice(0, display).map(actor => (\n                <li key={actor.id} className={css.nameActor}>\n                  {actor.name}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div>No Information</div>\n          )}\n\n          <button onClick={handleDisplayAll} className={css.btn}>\n            {display === initDisplay ? 'Show More' : 'Close'}\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["API_URL","API_KEY","movieId","useParams","useState","cast","setCast","err","setErr","showCast","setShowCast","display","setDisplay","useEffect","fetchCredits","options","method","url","params","api_key","language","credits","headers","accept","Authorization","axios","resp","data","console","error","className","css","to","onClick","prevShowCast","length","slice","map","actor","name","id","prevDisplay"],"sourceRoot":""}